@model ERP_GMEDINA.Models.tbProducto
@using ERP_GMEDINA.Models

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
    .MayusText {
        text-transform:uppercase;
    }
</style>



<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Editar Producto</h2>

    </div>
 

    <div class="col-sm-8">
        <div class="title-action">
            <a href="@Url.Action("Index","Producto")">Regresar</a>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Producto</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.prod_Codigo)
                        @Html.Hidden("RedirectTo", Url.Action("edit", "Producto"))
                        @Html.HiddenFor(model => model.prod_UsuarioCrea)
                        @Html.HiddenFor(model => model.prod_FechaCrea)
                        @Html.HiddenFor(model => model.prod_UsuarioModifica)
                        @Html.HiddenFor(model => model.prod_FechaModifica)
                        @Html.HiddenFor(model => model.tbUsuario.usu_Nombres)
                        @Html.HiddenFor(model => model.tbUsuario.usu_Apellidos)
                        @Html.HiddenFor(model => model.tbUsuario1.usu_Nombres)
                        @Html.HiddenFor(model => model.tbUsuario1.usu_Apellidos)

                       
                       
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tbProductoSubcategoria.tbProductoCategoria.pcat_Nombre, "Categoria", new { @class = "control-label col-md-2 , required" })
                                    <div class="col-md-4">

                                        @Html.DropDownList("pcat_Id", null, new { @class = "form-control" })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.pcat_Id)</p>
                                    </div>

                                    @Html.LabelFor(model => model.tbProductoSubcategoria.pscat_Descripcion, "SubCategoria", new { @class = "control-label col-md-2 , required" })
                                    <div class="col-md-4">

                                        @Html.DropDownList("pscat_Id", null, new { @class = "form-control" })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.pscat_Id)</p>

                                    </div>

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.prod_Codigo, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_Codigo, new { htmlAttributes = new { @id = "CodigoPro", @class = "form-control", @readonly = "readonly" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Codigo)</p>
                                    </div>

                                    @Html.LabelFor(model => model.prod_CodigoBarras, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_CodigoBarras, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return solonumeros(event)", @maxlength = "15", @readonly = "readonly" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_CodigoBarras)</p>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.prod_Descripcion, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_Descripcion, new { htmlAttributes = new { @class = "single-line , MayusText", @onkeypress = "return soloLetras(event)", @maxlength = "40", @autocomplete = "off" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Descripcion)</p>
                                    </div>

                                    @Html.LabelFor(model => model.prod_Marca, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_Marca, new { htmlAttributes = new { @class = "single-line , MayusText", @onkeypress = "return soloLetras(event)", @maxlength = "30", @autocomplete = "off" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Marca)</p>
                                    </div>

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.prod_Modelo, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_Modelo, new { htmlAttributes = new { @class = "single-line , MayusText", @onkeypress = "return soloLetras(event)", @maxlength = "30", @autocomplete = "off" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Modelo)</p>
                                    </div>

                                    @Html.LabelFor(model => model.prod_Color, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_Color, new { htmlAttributes = new { @class = "single-line , MayusText", @onkeypress = "return soloLetras(event)", @maxlength = "20", @autocomplete = "off" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Color)</p>
                                    </div>


                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.prod_Talla, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.prod_Talla, new { htmlAttributes = new { @class = "single-line , MayusText", @onkeypress = "return soloLetras(event)", @maxlength = "15", @autocomplete = "off" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Talla)</p>
                                    </div>

                                    @Html.LabelFor(model => model.tbUnidadMedida.uni_Descripcion, "Unidad Medida", new { @class = "control-label col-md-2 , required" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("uni_Id", null, new { @class = "form-control" })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.uni_Id)</p>
                                    </div>
                                </div>

                                <div class="form-group" id="">
                                    @Html.LabelFor(model => model.tbProveedor.prov_Nombre, "Proveedor", new { @class = "control-label col-md-2 , required" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("prov_Id", null, new { @class = "form-control" })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.prov_Id)</p>
                                    </div>

                                    @Html.LabelFor(model => model.prod_EsActivo, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @if (Model.prod_EsActivo == true)
                                        {
                                            <p> ACTIVO</p>
                                        }
                                        else
                                        {
                                            <p>INACTIVO</p>
                                        }
                                        <p style="color:red">  @Html.ValidationMessageFor(model => model.prod_EsActivo)</p>
                                    </div>
                                </div>

                                <div class="form-group" id="">
                                    @if (Model.prod_EsActivo == Helpers.ProductoInactivo)
                                    {
                                        <div class="form-group" id="RazonInactivo">
                                            @Html.LabelFor(model => model.prod_Razon_Inactivacion, new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.prod_Razon_Inactivacion, new { htmlAttributes = new { @class = "single-line , MayusText", @onkeypress = "return soloLetras(event)", @maxlength = "150" } })
                                                <p style="color:red">@Html.ValidationMessageFor(model => model.prod_Razon_Inactivacion)</p>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Guardar" class="btn btn-primary" id="btnGuardar" />
                                        @if (Model.prod_EsActivo == Helpers.ProductoActivo)
                                        {
                                            <button type="button" id="inactivar" name="inactivar" class="btn btn-danger" data-toggle="modal" data-target="#ModalAnular">
                                                Inactivar
                                            </button>
                                        }
                                        else
                                        {
                                            @Html.ActionLink("Activar", "Estadoactivar", new { prod_Codigo = Model.prod_Codigo }, new { @class = "btn btn-primary" })
                                        }
                                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })


                                    </div>
                                </div>                       

                        </div>                      
                }
                </div>
            </div>
           
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Auditoría</h5>
                </div>
                <div class="ibox-content">
                    <table class="table table-striped  table-bordered">
                        <tr>
                            <th>Acción</th>
                            <th>Usuario</th>
                            <th>Fecha</th>
                        </tr>
                        <tr>
                            <td>Creado</td>
                            <td>
                                @Html.DisplayFor(model => model.tbUsuario1.usu_Nombres)
                                @Html.DisplayFor(model => model.tbUsuario1.usu_Apellidos)
                            </td>
                            <td>@Html.DisplayFor(model => model.prod_FechaCrea)</td>
                        </tr>
                        <tr>
                            <td>Modificado</td>
                            <td>
                                @Html.DisplayFor(model => model.tbUsuario.usu_Nombres)
                                @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)
                            </td>
                            <td>@Html.DisplayFor(model => model.prod_FechaModifica)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
 </div>




<div class="modal fade" id="ModalAnular" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h5 class="modal-title" id="exampleModalLabel">Inactivar Producto</h5>
            </div>
            <div class="modal-body">
                <p>¿Ingrese Razón Inactivación?</p>
                <textarea rows="4" cols="70" id="razonInac" name="razonInac" class="single-line , MayusText", onkeypress = "return soloLetras(event)" maxlength = "150"></textarea>
                <p id="Mensaje" style="color:red"></p>
            </div>

            <div class="modal-footer">
                <button class="btn btn-primary btn-sm" type="button" id="Inactivar">Guardar</button>           
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Salir</button>
            </div>
        </div>
    </div>
</div>




<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/app/InActivarProducto.js"></script>
<script src="~/Scripts/app/SubCategoriaProductoEdit.js"></script>

@section Scripts{
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/app/InActivarProducto.js"></script>
    <script>
        jQuery('input,select').each(function () {
            var req = jQuery(this).attr('data-val-required');
            if (undefined != req) {
                var label = jQuery('label[for="' + jQuery(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0) {
                    label.append('<span style="color:red"> *</span>');
                }
            }
        });
    </script>
}






