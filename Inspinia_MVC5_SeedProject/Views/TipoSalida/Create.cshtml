@model ERP_GMEDINA.Models.tbTipoSalida

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .validation-summary-errors {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }

     #tsal_Descripcion {
        text-transform: uppercase;
    }
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Tipos de Salida</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>

    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Registrar Tipo de Salida</h5>
                    </div>
                    <div class="ibox-content">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                               

                                <div class="form-group">
                                    @Html.LabelFor(model => model.tsal_Descripcion, new { @class = "control-label col-md-2 , required " })
                                    <div class="col-md-5">
                                        @*@Html.EditorFor(model => model.tsal_Descripcion , new { @class = "text-danger", id = "TipoSalida_Descripcion" })*@
                                        <input type="text" id="tsal_Descripcion" name="tsal_Descripcion" onblur="limpia()" class="form-control " Value="" onKeyPress="return soloLetras(event)" autocomplete="off" />
                                        <span style="color:red">@Html.ValidationSummary(true)</span>
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.tsal_Descripcion)</p>

                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Guardar" class="btn btn-primary" id="btnTipoSalida"/>
                                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                                    </div>
                                </div>
                            </div>
                        }

                    </div>

                </div>
               
            </div>
        </div>
    </div>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/app/DataTable.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        jQuery('input,select').each(function () {
            var req = jQuery(this).attr('data-val-required');
            if (undefined != req) {
                var label = jQuery('label[for="' + jQuery(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0) {
                    label.append('<span style="color:red"> *</span>');
                }
            }
        });

        $("#tsal_Descripcion").change(function () {
            var str = $("#tsal_Descripcion").val();
            var res = str.toUpperCase();
            $("#tsal_Descripcion").val(res);
        });

        document.getElementById("tsal_Descripcion").addEventListener("keydown", teclear);
        var teclaAnterior = "";
        function teclear(event) {
            teclaAnterior = teclaAnterior + " " + event.keyCode;
            var arregloTA = teclaAnterior.split(" ");
            if (event.keyCode == 32 && arregloTA[arregloTA.length - 2] == 32) {
                event.preventDefault();
            }
        }

        function ponleFocus() {
            document.getElementById("tsal_Descripcion").focus();
        }

        ponleFocus();
        function soloLetras(e) {
            tecla = (document.all) ? e.keyCode : e.which;
            tecla = String.fromCharCode(tecla)
            return /^[a-zA-ZÑ ]+$/.test(tecla);

        };
        //Limpiar campo de campos copiados y no permitidos por el campo de nombre
        function limpia() {
            var val = document.getElementById("tsal_Descripcion").value;
            var tam = val.length;
            for (i = 0; i < tam; i++) {
                if (!isNaN(val[i]))
                    document.getElementById("tsal_Descripcion").value = '';
            }
        };
        ///validar not copy paste///
        window.onload =
            function () {
                var myInput = document.getElementById('tsal_Descripcion');
                myInput.onpaste = function (e) {
                    e.preventDefault();
                    //alert("esta acción está prohibida");
                }

                myInput.oncopy = function (e) {
                    e.preventDefault();
                    //alert("esta acción está prohibida");
                }
            };
    </script>
}