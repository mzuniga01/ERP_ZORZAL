@model ERP_GMEDINA.Models.tbTipoEntrada

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .validation-error {
        color: red;
        font-size: small;
    }
    .validation-summary-errors
     {
        color: red;
        font-size: small;
                        }
    .required:after {
        content: "*";
        font-weight: bold;
        color: red; 
                        }
    #miInput {
        text-transform: uppercase;
    }
</style>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Tipo Entrada</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Registrar Tipo Entrada</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        <div class="form-group">
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.tent_Descripcion, new { @class = "control-label col-md-2 , required" })
                            <div class="col-md-5">
                                @*@Html.EditorFor(model => model.tent_Descripcion)*@
                                <input type="text" id="miInput" name="tent_Descripcion" onblur="limpia()"  class="form-control " Value="" onKeyPress="return soloLetras(event)" autocomplete="off" />
                                <p style="color:red">@Html.ValidationMessageFor(model => model.tent_Descripcion) </p>
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" id="btnGuardar" value="Guardar" class="btn btn-primary" />
                                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                            </div>
                        </div>
                    </div>
}

                </div>
            </div>
        </div>
    </div>
 </div>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script>
    $("#miInput").focus();
    //Validar Los campos Stringg
    function soloLetras(e) {
        tecla = (document.all) ? e.keyCode : e.which;
        tecla = String.fromCharCode(tecla)
        return /^[a-zA-ZáéíóúñÁÉÍÓÚÑ ]+$/.test(tecla);
    }
    ////Limpiar campo de campos copiados y no permitidos por el campo de nombre
    function limpia() {
        var val = document.getElementById("miInput").value;
        var tam = val.length;
        for (i = 0; i < tam; i++) {
            if (!isNaN(val[i]))
                document.getElementById("miInput").value = '';
        }
    }
    $("#miInput").change(function () {
        var str = $("#miInput").val();
        var res = str.toUpperCase();
        $("#miInput").val(res);
    });
    $("#miInput").keypress(function (e) {

        if (e.which == 13) {

            // Acciones a realizar, por ej: enviar formulario.

            $('#btnGuardar').click();

        }

    });

</script>
 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
