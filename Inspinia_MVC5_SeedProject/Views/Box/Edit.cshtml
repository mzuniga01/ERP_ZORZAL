@model ERP_GMEDINA.Models.tbBox
@using ERP_GMEDINA.Models

@{
    ViewBag.Title = "Editar Caja";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .validation-summary-errors {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>



<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Caja</h2>

    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a href="@Url.Action("Index","Box")">Regresar</a>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Caja</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Edit", "Box", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.box_Codigo)

                            @*Datos de Auditoria*@
                            @Html.HiddenFor(model => model.box_UsuarioCrea)
                            @Html.HiddenFor(model => model.box_FechaCrea)
                            @Html.HiddenFor(model => model.box_UsuarioModifica)
                            @Html.HiddenFor(model => model.box_FechaModifica)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Nombres)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Apellidos)

                            @Html.HiddenFor(model => model.tbUsuario.usu_NombreUsuario)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Password)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Correo)
                            @Html.HiddenFor(model => model.tbUsuario.usu_EsActivo)
                            @Html.HiddenFor(model => model.tbUsuario.usu_EsAdministrador)
                            @Html.HiddenFor(model => model.tbUsuario.usu_NombreUsuario)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Password)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Correo)
                            @Html.HiddenFor(model => model.tbUsuario.usu_EsActivo)
                            @Html.HiddenFor(model => model.tbUsuario.usu_EsAdministrador)



                            <div class="form-group">
                                @Html.LabelFor(model => model.box_Codigo, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.box_Codigo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.box_Codigo)
                                </div>

                                @Html.LabelFor(model => model.box_Descripcion, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.box_Descripcion, new { htmlAttributes = new { @class = "form-control", @onKeyPress = "return controlCaracteres(event)" } })
                                    @Html.ValidationMessageFor(model => model.box_Descripcion)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.bod_Id, "Nombre de Bodega", new { @class = "control-label col-md-2 required" })
                                <div style="display:block" class="col-md-4">
                                    @Html.DropDownList("bod_Id", (IEnumerable<SelectListItem>)ViewBag.bod_Id, new { @class = "form-control" })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.bod_Id)</p>
                                </div>

                                @Html.LabelFor(model => model.box_Estado, "Estado", new { @class = "control-label col-md-2 required" })
                                <div style="display:block" class="col-md-4">
                                    @if (Model.box_Estado == Helpers.vbox_Abrierta)
                                    {
                                        @Html.EditorFor(model => model.box_Descripcion, new { htmlAttributes = new { @class = "form-control", Value = "Abierta", @readonly = "readonly" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.bod_Id)</p>
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.box_Descripcion, new { htmlAttributes = new { @class = "form-control", Value = "Cerrada", @readonly = "readonly" } })
                                        <p style="color:red">@Html.ValidationMessageFor(model => model.bod_Id)</p>
                                    }


                                </div>

                            </div>
                            <div class="title-action">
                                <button type="button" id="btnModalGuardarNumeracion" class="btn btn-primary btn-sm" data-toggle="collapse" data-target="#Crear">Registrar Detalle</button>
                                <div class="ibox-content collapse" id="Crear">
                                    @Html.Partial("_CreateEditSalidaDetalle", new ERP_GMEDINA.Models.tbBoxDetalle())
                                </div>
                            </div>

                        </div><div class="row">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.Partial("_EditSalidaDetalle", Model.tbBoxDetalle, new ViewDataDictionary(new { clave = Model.box_Codigo }))
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-5 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                    @Html.ActionLink("Imprimir", "PackingList", new { id = Model.box_Codigo }, new { @class = "btn btn-primary", @Id = "Imprimir" })
                                    @{
                                        if (Model.box_Estado == Helpers.vbox_Abrierta)
                                        {
                                            <input type="button" class="btn btn-danger" data-toggle="modal" data-target="#ModalClose" value="Cerrar" />
                                        }
                                    }
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                                        }
                </div>

            </div>
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Auditoría</h5>
                </div>
                <div class="ibox-content">
                    <table class="table table table-striped  table-bordered">
                        <tr>
                            <th>Acción</th>
                            <th>Usuario</th>
                            <th>Fecha</th>
                        </tr>
                        <tr>
                            <td>Creado</td>
                            <td>
                                @Html.DisplayFor(model => model.tbUsuario.usu_Nombres)
                                @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)
                            </td>
                            <td>@Html.DisplayFor(model => model.box_FechaCrea)</td>
                        </tr>
                        <tr>
                            <td>Modificado</td>
                            <td>
                                @Html.DisplayFor(model => model.tbUsuario.usu_Nombres)
                                @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)
                            </td>
                            <td>@Html.DisplayFor(model => model.box_FechaModifica)</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="modal fade" id="ModalClose" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title" id="myModalLabel">Cerrar Caja</h4>
                        </div>
                        <div class="modal-body" id="frmBuscarProducto">
                            ¿Esta seguro de cerrar esta caja?. No prodras editarla.
                        </div>
                        <div class="modal-body">
                            <p style="color:maroon"></p>
                            <div class="col-md-4">
                            </div>
                        </div>
                        <div class="modal-footer">
                            @Html.ActionLink("Cerrar", "Close", new { box_Codigo = Model.box_Codigo }, new { @class = "btn btn-danger" })
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


@*<script src="~/Scripts/jquery-3.1.1.min.js"></script>*@
@*<script src="~/Scripts/jquery-3.3.1.js"></script>*@
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/app/Datepicker.js"></script>
<script src="~/Scripts/app/DetalleBox.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/app/DataTable.js"></script>
}

<script>
    //$(":input").inputmask();

    //$("#sald_Cantidad").inputmask({ "mask": "999.99" });

    var selector = "#fact_Codigo";
    $(selector).val('');
    $(selector).mask("999-999-99-99999999", { reverse: true });
    //Output is shown as: 1,000,000

    var value = $(selector).cleanVal();
    //Mask will be removed on next line
    $(selector).val('');

    $(function () {
        $("#sal_FechaElaboracion").datepicker({
            dateFormat: 'yy-mm-dd',
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá']
        }).datepicker("setDate", new Date());
    });

    function filterFloat(evt, input) {
        // Backspace = 8, Enter = 13, ‘0′ = 48, ‘9′ = 57, ‘.’ = 46, ‘-’ = 43
        var key = window.Event ? evt.which : evt.keyCode;
        var chark = String.fromCharCode(key);
        var tempValue = input.value + chark;
        if (key >= 48 && key <= 57) {
            if (filter(tempValue) === false) {
                return false;
            } else {
                return true;
            }
        } else {
            if (key == 8 || key == 13 || key == 0) {
                return true;
            } else if (key == 46) {
                if (filter(tempValue) === false) {
                    return false;
                } else {
                    return true;
                }
            } else {
                return false;
            }
        }
    }
    function filter(__val__) {
        var preg = /^([0-9]+\.?[0-9]{0,2})$/;
        if (preg.test(__val__) === true) {
            return true;
        } else {
            return false;
        }

    }

</script>
