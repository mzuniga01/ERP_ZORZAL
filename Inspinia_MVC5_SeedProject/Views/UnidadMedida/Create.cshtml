@model ERP_GMEDINA.Models.tbUnidadMedida

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .validation-summary-errors {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    #uni_Descripcion {
        text-transform: uppercase;
    }
    
</style>

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Unidades de Medida</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a href="@Url.Action("Index","UnidadMedida")">Regresar</a>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Ingresar Unidad de Medida</h5>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @*@Html.ValidationSummary(true)*@
                            <span style="color:red">@Html.ValidationSummary(true)</span>

                            <div class="form-group">
                                @Html.LabelFor(model => model.uni_Descripcion, new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @*@Html.EditorFor(model => model.uni_Descripcion)*@
                                    <input type="text" id="uni_Descripcion" name="uni_Descripcion" onblur="limpia()" class="form-control " Value="" onKeyPress="return soloLetras(event)" autocomplete="off" style="text-transform:uppercase"/> 
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.uni_Descripcion)</p>
                                 </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.uni_Abreviatura, new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @*@Html.EditorFor(model => model.uni_Abreviatura)*@
                                    <input type="text" id="uni_Abreviatura" name="uni_Abreviatura" onblur="limpia()" class="form-control " Value="" onKeyPress="return soloLetras(event)" autocomplete="off" maxlength="3"/>
                                    <p style="color:red" id="parrafo"></p>
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.uni_Abreviatura)</p>
                                 </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/app/DataTable.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

   <script>

       function soloLetras(e) {
           tecla = (document.all) ? e.keyCode : e.which;
           tecla = String.fromCharCode(tecla)
           return /^[a-zA-ZÑ ]+$/.test(tecla);
       }
       window.onload =
    function () {
        var myInput = document.getElementById('uni_Descripcion');
        myInput.onpaste = function (e) {
            e.preventDefault();
        }

        myInput.oncopy = function (e) {
            e.preventDefault();
        }
    };
       function limpia() {
           var val = document.getElementById("uni_Descripcion").value;
           var tam = val.length;
           for (i = 0; i < tam; i++) {
               if (!isNaN(val[i]))
                   document.getElementById("uni_Descripcion").value = '';
           }
       }
       jQuery('input').each(function () {
           var req = jQuery(this).attr('data-val-required');
           if (undefined != req) {
               var label = jQuery('label[for="' + jQuery(this).attr('id') + '"]');
               var text = label.text();
               if (text.length > 0) {
                   label.append('<span style="color:red"> *</span>');
               }
           }
       });   
       
    </script>
}