@model ERP_GMEDINA.Models.tbSalida
@using ERP_GMEDINA.Models
@{
    /**/

    /**/

    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .validation-summary-errors {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Salida</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>
@{
    //string UserName = "";
    //int idUser = 0;
    //int czx = 0;
    //GeneralFunctions Login = new GeneralFunctions();
    //List<tbUsuario> User = Login.getUserInformation();
    //tbBodega tbBod = new tbBodega();
    //foreach (tbUsuario Usuario in User)
    //{
    //    UserName = Usuario.usu_Nombres + " " + Usuario.usu_Apellidos;
    //    idUser = Convert.ToInt32(Usuario.emp_Id);
    //    int czx = Usuario.tbBodega.Where(x => x.bod_ResponsableBodega == idUser).Select(x => x.bod_Id).SingleOrDefault();
    //}

}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h3><b>Modificar Salida</b></h3>
                </div>
                <div class="ibox-content">

                    @using (Html.BeginForm("Edit", "Salida", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        @Html.HiddenFor(model => model.sal_Id)
                        @Html.HiddenFor(model => model.fact_Id)
                        @Html.HiddenFor(model => model.fact_Codigo, new { Value = ViewBag.vbfact_Codigo })

                        @*<input name="fact_Codigo" id="fact_Codigo" value="">*@

                        @*<input type="hidden" name="sal_Id" id="sal_Id" value="@ViewBag.IdSal">*@
                        <div class="form-horizontal">

                            <fieldset class="box-border">
                                <legend class="box-border">Datos Generales</legend>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.sal_FechaElaboracion, "Fecha de Elaboración", new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.sal_FechaElaboracion, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.sal_FechaElaboracion)
                                    </div>
                                </div>
                                @*, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @id = "FechaElaboracionSalida" } }*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.bod_Id, "Nombre de Bodega", new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.tbBodega.bod_Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        <div style="display:none" class="col-md-4">
                                            @Html.DropDownList("bod_Id", null, htmlAttributes: new { @class = "form-control" })
                                            <p style="color:red">@Html.ValidationMessageFor(model => model.bod_Id)</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.estm_Id, "Estado", new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.tbEstadoMovimiento.estm_Descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        <div style="display:none" class="col-md-4">
                                            @Html.DropDownList("estm_Id", null, htmlAttributes: new { @class = "form-control" })
                                            <p style="color:red">@Html.ValidationMessageFor(model => model.estm_Id)</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.tsal_Id, "Tipo de Salida", new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.tbTipoSalida.tsal_Descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        <div style="display:none" class="col-md-4">
                                            @Html.DropDownList("tsal_Id", null, htmlAttributes: new { @class = "form-control" })
                                            <p style="color:red">@Html.ValidationMessageFor(model => model.tsal_Id)</p>
                                        </div>
                                    </div>
                                </div>
                                @{
                                    if (Model.sal_EsAnulada)
                                    {
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.sal_EsAnulada, "¿Es Anulada?", new { @class = "control-label col-md-2 required" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.sal_EsAnulada, new { htmlAttributes = new { @class = "form-control", @checked = "checked", @disabled = "disabled" } })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.sal_RazonAnulada, "Razon de Anulacion", new { @class = "control-label col-md-2 required" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.sal_RazonAnulada, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            </div>
                                        </div>
                                    }
                                }
                            </fieldset>
                        </div>

                        <div class="form-horizontal" id="VentaoDevolucion" style="display:none">
                            <fieldset class="box-border">
                                <legend class="box-border" id="TitleVenta">Venta</legend>
                                <legend class="box-border" id="TitleDevolucion">Devolucion</legend>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.fact_Id, new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.tbFactura.fact_Codigo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        <p style="color:red">

                                            @Html.ValidationMessageFor(model => model.fact_Id)
                                        </p>
                                    </div>

                                    <div id="div_sal_RazonDevolucion">
                                        @Html.LabelFor(model => model.sal_RazonDevolucion, new { @class = "control-label col-md-2 required" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.sal_RazonDevolucion)
                                            <p style="color:red">
                                                @Html.ValidationMessageFor(model => model.sal_RazonDevolucion)
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                        <div class="form-horizontal" id="Prestamo" style="display:none">
                            <fieldset class="box-border">
                                <legend class="box-border">Prestamo</legend>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.sal_BodDestino, "Bodega de Destino", new { @class = "control-label col-md-2 required" })
                                    <div class="col-md-4">
                                        @Html.DropDownList("sal_BodDestino", (IEnumerable<SelectListItem>)null, new { @class = "form-control" })
                                        <p style="color:red">
                                            @Html.ValidationMessageFor(model => model.sal_BodDestino)
                                        </p>
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset><legend class="box-border"></legend> </fieldset>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @{
                                    if (!Model.sal_EsAnulada && Model.estm_Id == Helpers.sal_Emitida)
                                    {
                                        <input type="submit" value="Guardar" class="btn btn-primary" />
                                    }
                                    else
                                    {
                                        <input type="submit" value="Guardar" disabled class="btn btn-primary" />
                                    }
                                    var Estado = Model.estm_Id;
                                    if (Estado == Helpers.sal_Emitida && !Model.sal_EsAnulada)
                                    {
                                        <input type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalAplicar" value="Aplicar" />
                                    }
                                    else
                                    {

                                    }
                                    if (Estado == Helpers.sal_Aplicada && !Model.sal_EsAnulada)
                                    {
                                        @Html.ActionLink("Imprimir", "Imprimir", new { id = Model.sal_Id }, new { @class = "btn btn-success" })
                                    }
                                    if (!Model.sal_EsAnulada && Estado == Helpers.sal_Emitida)
                                    {
                                        <input type="button" class="btn btn-danger" data-toggle="modal" id="Anular" data-target="#ModalAnular" value="Anular" />
                                    }
                                    if (Estado == Helpers.sal_Activa)
                                    {
                                        <input type="button" class="btn btn-danger" data-toggle="modal" data-target="#ModalInactivar" value="Inactivar" />
                                    }
                                    else if (Estado == Helpers.sal_Inactiva)
                                    {
                                        <input type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalActivar" value="Activar" />
                                    }
                                }

                                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                            </div>
                        </div>
                        <div class="col-lg-12">
                            @*<div class="ibox float-e-margins">*@
                            <div class="ibox-title">
                                @if (!Model.sal_EsAnulada && Model.estm_Id == Helpers.sal_Emitida)
                                {
                                    <div class="ibox-tools">
                                        <button type="button" id="btnModalGuardarNumeracion" class="btn btn-primary btn-sm" data-toggle="collapse" data-target="#Nuevo">
                                            Agregar Producto
                                        </button>
                                    </div>
                                }
                            </div>
                            <div class="ibox-content collapse" id="Nuevo">
                                @Html.Partial("_EditCreateSalidaDetalle", new ERP_GMEDINA.Models.tbSalidaDetalle())
                                @*</div>*@
                            </div>
                        </div>

                        <div class="col-lg-12"> </div>
                      

                        @* Llama la vista  *@
                        <div class="ibox float-e-margins">
                            <div class="ibox-content">

                                <div class="row">

                                    <div class="col-lg-12">
                                        <div class="ibox-content">

                                            <fieldset class="box-border">

                                                <legend class="box-border">Salida Detalle</legend>
                                                @Html.Partial("_EditSalidaDetalle", Model.tbSalidaDetalle, new ViewDataDictionary(new { clave = Model.sal_Id }))
                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*botones*@

                        <br />
                    }
                </div>
            </div>
            <div class="ibox-content">
                <fieldset class="box-border">
                    <legend class="box-border">Datos Auditoria</legend>
                    <table class="table table-striped dataTable no-footer" style="width:100%">
                        <tr>
                            <th>Acciones</th>
                            <th>Usuario</th>
                            <th>Fecha</th>
                        </tr>
                        <tr>
                            <td>Creado</td>
                            <td>@Html.DisplayFor(model => model.tbUsuario1.usu_Nombres) @Html.DisplayFor(model => model.tbUsuario1.usu_Apellidos)</td>
                            <td>@Html.DisplayFor(model => model.sal_FechaCrea)</td>
                        </tr>
                        <tr>
                            <td>Modificado</td>
                            <td>@Html.DisplayFor(model => model.tbUsuario.usu_Nombres) @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)</td>
                            <td>@Html.DisplayFor(model => model.sal_FechaModifica)</td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_Modales")

<script type="text/javascript">

    //$(document).ready(function () {
    //    $('#tbSalidaDetalle').DataTable(
    //        {
    //            "searching": true,

    //            "oLanguage": {
    //                "oPaginate": {
    //                    "sNext": "Siguiente",
    //                    "sPrevious": "Anterior",
    //                },
    //                "sProcessing": "Procesando...",
    //                "sLengthMenu": "Mostrar _MENU_ registros",
    //                "sZeroRecords": "No se encontraron resultados",
    //                "sEmptyTable": "Ningún dato disponible en esta tabla",
    //                "sEmptyTable": "No hay registros",
    //                "sInfoEmpty": "Mostrando 0 de 0 Entradas",
    //                "sSearch": "Buscar",
    //                "sInfo": "Mostrando _START_ a _END_ Entradas",
    //                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
    //            }
    //        });
    //});
</script>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/app/Salida.js"></script>
<script src="~/Scripts/app/SalidaEdit.js"></script>

<script src="~/Scripts/app/SalidaDetalle.js"></script>
<script src="~/Scripts/app/DataTable.js"></script>>
<script type="text/javascript">

    $("#Anular").click(function () {

        var sal_RazonAnulada = $('#sal_RazonAnulada').val();
        if (sal_RazonAnulada == '' || "*****") {
            $('#sal_RazonAnulada').val('');
        }
    })

    $(function () {

        $.ajax({
            method: "POST",
            url: "/Salida/BodegaDestinoEdit",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify({ id: $('#sal_Id').val() }),
        }).done(function (data) {
            $("#sal_BodDestino").val(data)
        })

    });
</script>

<script>
    // Copiar y Pegar///
    $(document).ready(function () {
        $('#sal_RazonAnulada').bind("cut copy paste", function (e) {
            e.preventDefault();
        });
    });
    function check(e) {
        tecla = (document.all) ? e.keyCode : e.which;
        //Tecla de retroceso para borrar, siempre la permite
        if (tecla == 8) {
            return true;
        }
        // Patron de entrada, en este caso solo acepta numeros y letras
        patron = /[A-Za-z0-9]/;
        tecla_final = String.fromCharCode(tecla);
        return patron.test(tecla_final);
    }
    //$(":input").inputmask();
    //$.ajax({
    //    method: "POST",
    //    url: "/Salida/BodegaDestino",
    //    contentType: "application/json; charset=utf-8",
    //    dataType: 'json', data: JSON.stringify({ id: $('#bod_Id').val() }),
    //}).done(function (data) {
    //    $("#sal_BodDestino").empty();
    //    $("#sal_BodDestino").append("<option placeholder='Seleccione una Bodega de Destino'>Seleccione una Bodega de Destino</option>")
    //    $.each(data, function (index, row) {
    //        $("#sal_BodDestino").append("<option value ='" + row.bod_Id + "'>" + row.bod_Nombre + "</option>")
    //    });
    //})
    //$("#sald_Cantidad").inputmask({ "mask": "999.99" });

    //var selector = "#fact_Codigo";
    //$(selector).mask("999-999-99-99999999", { reverse: true });
    //Output is shown as: 1,000,000

    var value = $(selector).cleanVal();
    //Mask will be removed on next line

    $(function () {
        $("#sal_FechaElaboracion").datepicker({
            dateFormat: 'yy-mm-dd',
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá']
        });
    });

    function filterFloat(evt, input) {
        // Backspace = 8, Enter = 13, ‘0′ = 48, ‘9′ = 57, ‘.’ = 46, ‘-’ = 43
        var key = window.Event ? evt.which : evt.keyCode;
        var chark = String.fromCharCode(key);
        var tempValue = input.value + chark;
        if (key >= 48 && key <= 57) {
            if (filter(tempValue) === false) {
                return false;
            } else {
                return true;
            }
        } else {
            if (key == 8 || key == 13 || key == 0) {
                return true;
            } else if (key == 46) {
                if (filter(tempValue) === false) {
                    return false;
                } else {
                    return true;
                }
            } else {
                return false;
            }
        }
    }
    function filter(__val__) {
        var preg = /^([0-9]+\.?[0-9]{0,2})$/;
        if (preg.test(__val__) === true) {
            return true;
        } else {
            return false;
        }

    }
</script>
@*<script type="text/javascript">
        var contadorp = 0;
        $(document).ready(function () {
            $.get('/Salida/GetProdList', function (data) {

                $("#cuerpo").html("");
                $.each(data, function (index, row) {
                    contadorp = contadorp + 1;
                    copy = "<tr data-id=" + contadorp + ">";
                    copy += "<td id = 'Cod_Producto'>" + row.prod_Codigo + "</td>";
                    copy += "<td id = 'Producto'>" + row.data(tbProducto) + "</td>";
                    copy += "<td id = 'Unidad_Medida'>" + row.prod_Codigo + "</td>";
                    copy += "<td id = 'Cantidad'>" + row.prod_Codigo + "</td>";
                    copy += "<td>" + '<button class="btn btn-primary btn-xs" value="' + row.prod_Codigo + '" id="seleccionar" data-dismiss="modal">Seleccionar</button>' + "</td>";
                    copy += "</tr>";
                    $('#cuerpo').append(copy);
                });

            })
        })
    </script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}