@model ERP_GMEDINA.Models.tbCuponDescuento

@{
    ViewBag.Title = "Registrar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Cupón Descuento</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>

<style>
    .AsteriscoRojo:after {
        content: "*";
        color: red;
    }
</style>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Registrar Cupón Descuento</h5>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="form-group">
                                @Html.LabelFor(model => model.suc_Id, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <input class="form-control" readonly value="@ViewBag.suc_Descripcion" />
                                    <input class="form-control" readonly value="@ViewBag.suc_Id" id="suc_Id" name="suc_Id" type="hidden" />
                                    <span class="validation-error">  @Html.ValidationMessageFor(model => model.suc_Id)</span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2 AsteriscoRojo">% Descuento</label>
                                <div class="col-md-4">
                                    <input type="text" id="cdto_PorcentajeDescuentoH" name="cdto_PorcentajeDescuentoH" class="form-control" style="text-align:right" onkeypress="return valideKey(event);" maxlength="3" />
                                    <input type="hidden" id="cdto_PorcentajeDescuento" name="cdto_PorcentajeDescuento" />
                                    <p id="smsCantidad" style="color:red">@Html.ValidationMessageFor(model => model.cdto_PorcentajeDescuento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2 AsteriscoRojo">Máximo Monto Descuento</label>
                                <div class="col-md-4">
                                    <input type="text" class="form-control validanumericos" data-val="true" data-val-number="El campo Máximo Monto Descuento tiene que ser un Números." data-val-required="*El campo Máximo Monto Descuento es requerido" id="cdto_MaximoMontoDescuentoH" min="0" name="cdto_MaximoMontoDescuentoH" onchange="MASK(this, this.value, '-##,###,##0.00', 1)" onkeypres="MASK(this, this.value, '-##,###,##0.00', 1); return valideKey(event);" maxlength="6" style="text-align:right">
                                    <input type="hidden" id="cdto_MaximoMontoDescuento" name="cdto_MaximoMontoDescuento" />
                                    <p id="msjMaximoMonto" style="color:red">@Html.ValidationMessageFor(model => model.cdto_MaximoMontoDescuento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2 AsteriscoRojo">Monto Descuento</label>
                                <div class="col-md-4">
                                    <input class="form-control validanumericos" data-val="true" data-val-number="The field Monto Descuento must be a number." data-val-required="*El campo Monto Descuento es requerido" id="cdto_MontoDescuentoH" min="0" name="cdto_MontoDescuentoH" onchange="MASK(this,this.value,'-##,###,##0.00',1)" onkeypres="MASK(this, this.value, '-##,###,##0.00', 1); return valideKey(event);" maxlength="6" style="text-align:right" type="text">
                                    <input type="hidden" id="cdto_MontoDescuento" name="cdto_MontoDescuento" />
                                    <p id="msjMontoDescuento" style="color:red">@Html.ValidationMessageFor(model => model.cdto_MaximoMontoDescuento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2 AsteriscoRojo">Compra Mínima</label>
                                <div class="col-md-4">
                                    <input class="form-control validanumericos" data-val="true" data-val-number="The field Compra Mínima must be a number." data-val-required="*El campo Compra Mínima es requerido" id="cdto_CantidadCompraMinimaH" min="0" name="cdto_CantidadCompraMinimaH" onchange="MASK(this,this.value,'-##,###,##0.00',1)" onkeypres="MASK(this, this.value, '-##,###,##0.00', 1)" maxlength="6" style="text-align:right" type="text">
                                    <input type="hidden" id="cdto_CantidadCompraMinima" name="cdto_CantidadCompraMinima" />
                                    <p id="smsCantidadMinima" style="color:red">@Html.ValidationMessageFor(model => model.cdto_CantidadCompraMinima)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_FechaEmision, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_FechaEmision, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_FechaEmision)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.cdto_FechaVencimiento, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.cdto_FechaVencimiento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.cdto_FechaVencimiento)</p>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-4">
                                    <input type="hidden" id="cdto_Redimido" name="cdto_Redimido" value="false" />
                                    <input type="hidden" id="cdto_Anulado" name="cdto_Anulado" value="false" />
                                    <input type="hidden" id="cdto_EsImpreso" name="cdto_EsImpreso" value="false" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<input onkeypress="hola();" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#cdto_FechaEmision').datepicker({
            dateFormat: 'mm/dd/yy',
            monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
            prevText: 'Ant',
            nextText: 'Sig'
        }).datepicker('setDate', new Date());

        //-------------Fecha Actual-----------------------
        $(function () {
            $("#cdto_FechaEmision").datepicker({ dateFormat: 'mm/dd/yy' }).datepicker('setDate', new Date()).datepicker("destroy");

        });

        //-----------Fecha Vencimiento (1 año)--------------------
        var d = new Date();
        var strDate = (d.getMonth() + 1) + "/" + d.getDate() + "/" + (d.getFullYear() + 1);
        $("#cdto_FechaVencimiento").val(strDate);

        //------------------------CantidadMinima > MontoDescuento------------------
        $('#cdto_CantidadCompraMinimaH').blur(function () {
            valido = document.getElementById('smsCantidadMinima');
            var monto = $('#cdto_MontoDescuento').val();
            console.log(monto)
            var compraminima = $('#cdto_CantidadCompraMinima').val();
            console.log(monto)

            if (parseFloat(monto) >= parseFloat(compraminima) || $('#cdto_CantidadCompraMinimaH').val() == "") {
                $('#cdto_CantidadCompraMinimaH').val('').focus();
                valido.innerText = "El valor debe ser Mayor al Monto Descuento";
            } else
                valido.innerText = "";
        });

        //--------------------Digitar Datos--------------------------------
        $(document).ready(function () {
            $('#cdto_MaximoMontoDescuentoH').attr('readonly', 'readonly');
            $('#cdto_MontoDescuentoH').attr('readonly', 'readonly');
            $('#cdto_CantidadCompraMinimaH').attr('readonly', 'readonly');
        });

        $('#cdto_PorcentajeDescuentoH').focusout(function () {
            $("#cdto_PorcentajeDescuentoH").blur(function () {
                valido = document.getElementById('smsCantidad');
                var Porcen1 = $('#cdto_PorcentajeDescuento').val();
                if (parseFloat(Porcen1) < 0 || parseFloat(Porcen1) > 100) {
                    $('#cdto_PorcentajeDescuentoH').val("");
                    $('#cdto_PorcentajeDescuentoH').focus();
                    valido.innerText = "El valor debe ser entre 0 a 100";
                }
                else {
                    valido.innerText = "";
                }
            });
            if ($('#cdto_PorcentajeDescuentoH').val() == "" || $('#cdto_PorcentajeDescuentoH').val() == 0 || $('#cdto_PorcentajeDescuentoH').val() <= 0) {
                $('#cdto_PorcentajeDescuentoH').val('0.00')
                $('#cdto_PorcentajeDescuento').val('0.00')
            }
            else if ($('#cdto_MontoDescuentoH').val() == "") {
                $('#cdto_MontoDescuentoH').val('0.00')
                $('#cdto_MontoDescuento').val('0.00')
            }
            var Porcentaje = $('#cdto_PorcentajeDescuentoH').val();

            if (Porcentaje >= 1 || Porcentaje > 100) {
                $('#cdto_PorcentajeDescuentoH').removeAttr("readonly").val(Porcentaje + " %");
                $('#cdto_MaximoMontoDescuentoH').removeAttr("readonly");
                $('#cdto_MontoDescuentoH').attr('readonly', 'readonly').prop("disabled", true).val('0.00');
                $('#cdto_CantidadCompraMinimaH').attr('readonly', 'readonly').prop("disabled", true).val('0.00');
                //---------------------insertar 0.00---------------------
                $('#cdto_MontoDescuento').attr('readonly', 'readonly').val('0.00');
                $('#cdto_CantidadCompraMinima').attr('readonly', 'readonly').val('0.00');
                //---------------------FIN insertar 0.00---------------------

                //--------------------- > 0.00-------------------------
                $('#cdto_MaximoMontoDescuentoH').blur(function () {
                    valido1 = document.getElementById('msjMaximoMonto');
                    var monto = $('#cdto_MaximoMontoDescuento').val();
                    console.log(monto)

                    if (parseFloat(monto) <= 0 || $('#cdto_MaximoMontoDescuentoH').val() == "") {
                        $('#cdto_MaximoMontoDescuentoH').val('').focus();
                        valido1.innerText = "El valor debe ser Mayor a 0.";
                    } else
                        valido1.innerText = "";
                });
                //---------------------FIN > 0.00-------------------------

            } else if ((Porcentaje <= 0) || (Porcentaje > 100)) {
                //---------------------insertar 0.00---------------------
                $('#cdto_MaximoMontoDescuento').attr('readonly', 'readonly').val('0.00');
                //---------------------FIN insertar 0.00---------------------

                $('#cdto_MaximoMontoDescuentoH').attr('readonly', 'readonly').val('0.00');
                $("#cdto_MontoDescuentoH").removeAttr("readonly").prop("disabled", false).focus().val('');
                $('#cdto_CantidadCompraMinimaH').removeAttr("readonly").prop("disabled", false).val('');

                //--------------------- < 0.00 -------------------------
                $('#cdto_MontoDescuentoH').blur(function () {
                    valido2 = document.getElementById('msjMontoDescuento');
                    var montodesc = $('#cdto_MontoDescuento').val();
                    console.log(montodesc)

                    if (parseFloat(montodesc) <= 0 || $('#cdto_MontoDescuentoH').val() == "") {
                        $('#cdto_MontoDescuentoH').val('').focus();
                        valido2.innerText = "El valor debe ser Mayor a 0.";
                    } else {
                        valido2.innerText = "";
                    }
                });
                //---------------------FIN > 0.00-------------------------
            }
        });
        //--------------------FIN Digitar Datos--------------------------------

        //--------------------------keyup----------------------
        $('#cdto_PorcentajeDescuentoH').keydown(function () {
            var value = $(this).val();
            $('#cdto_PorcentajeDescuento').val(value);
        });

        $('#cdto_MaximoMontoDescuentoH').keydown(function () {
            var value = $(this).val();
            $('#cdto_MaximoMontoDescuento').val(value);
        });

        $('#cdto_MontoDescuentoH').keydown(function () {
            var value = $(this).val();
            $('#cdto_MontoDescuento').val(value);
        });

        $('#cdto_CantidadCompraMinimaH').keydown(function () {
            var value = $(this).val();
            $('#cdto_CantidadCompraMinima').val(value);
        });
        //---------------------asteriscos Rojos-------------------------------
        jQuery('input,select').each(function () {
            var req = jQuery(this).attr('data-val-required');
            if (undefined != req) {
                var label = jQuery('label[for="' + jQuery(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0) {
                    label.append('<span style="color:red">*</span>');
                }
            }
        });

        //---------------------------------Ctrl + G (GuardarRegistro)------------------------------
        $(document).keydown(function (e) {
            if ((e.key == 'g' || e.key == 'G') && (e.ctrlKey || e.metaKey)) {
                e.preventDefault();
                $("form").submit();
                return false;
            }
            return true;
        });

        //--------------------Milecimas y decimales-------------------
        function MASK(form, n, mask, format) {
            if (format == "undefined") format = false;
            if (format || NUM(n)) {
                dec = 0, point = 0;
                x = mask.indexOf(".") + 1;
                if (x) { dec = mask.length - x; }

                if (dec) {
                    n = NUM(n, dec) + "";
                    x = n.indexOf(".") + 1;
                    if (x) { point = n.length - x; } else { n += "."; }
                } else {
                    n = NUM(n, 0) + "";
                }
                for (var x = point; x < dec ; x++) {
                    n += "0";
                }
                x = n.length, y = mask.length, XMASK = "";
                while (x || y) {
                    if (x) {
                        while (y && "#0.".indexOf(mask.charAt(y - 1)) == -1) {
                            if (n.charAt(x - 1) != "-")
                                XMASK = mask.charAt(y - 1) + XMASK;
                            y--;
                        }
                        XMASK = n.charAt(x - 1) + XMASK, x--;
                    } else if (y && "0".indexOf(mask.charAt(y - 1)) + 1) {
                        XMASK = mask.charAt(y - 1) + XMASK;
                    }
                    if (y) { y-- }
                }
            } else {
                XMASK = "";
            }
            if (form) {
                form.value = XMASK;
                if (NUM(n) < 0) {
                    form.style.color = "#FF0000";
                } else {
                    form.style.color = "#000000";
                }
            }
            return XMASK;
        }

        function NUM(s, dec) {
            for (var s = s + "", num = "", x = 0 ; x < s.length ; x++) {
                c = s.charAt(x);
                if (".-+/*".indexOf(c) + 1 || c != " " && !isNaN(c)) { num += c; }
            }
            if (isNaN(num)) { num = eval(num); }
            if (num == "") { num = 0; } else { num = parseFloat(num); }
            if (dec != undefined) {
                r = .5; if (num < 0) r = -r;
                e = Math.pow(10, (dec > 0) ? dec : 0);
                return parseInt(num * e + r) / e;
            } else {
                return num;
            }
        }

        //------------------validar solo numeros---------------------------
        onload = function () {
            var ele = document.querySelectorAll('.validanumericos')[0];
            ele.onkeypress = function (e) {
                if (isNaN(this.value + String.fromCharCode(e.charCode)))
                    return false;
            }
            ele.onpaste = function (e) {
                e.preventDefault();
            }
        }

        //Solo permite introducir numeros.

        //function valideKey(evt)
        $('#cdto_MontoDescuentoH').keypress(function valideKey(evt) {
            var code = (evt.which) ? evt.which : evt.keyCode;
            if (code == 8) {
                //backspace
                return true;
            }
            else if (code >= 48 && code <= 57) {
                //is a number
                return true;
            }
            else {
                return false;
            }
        });

        $('#cdto_CantidadCompraMinimaH').keypress(function valideKey(evt) {
            var code = (evt.which) ? evt.which : evt.keyCode;
            if (code == 8) {
                //backspace
                return true;
            }
            else if (code >= 48 && code <= 57) {
                //is a number
                return true;
            }
            else {
                return false;
            }
        });

        function valideKey(evt) {
            var code = (evt.which) ? evt.which : evt.keyCode;
            if (code == 8) {
                //backspace
                return true;
            }
            else if (code >= 48 && code <= 57) {
                //is a number
                return true;
            }
            else {
                return false;
            }
        }
    </script>
}