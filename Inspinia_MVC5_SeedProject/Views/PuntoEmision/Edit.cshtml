@model ERP_GMEDINA.Models.tbPuntoEmision
@using ERP_GMEDINA.Models
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/css/Auditoria.css" rel="stylesheet" />

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Punto Emisión</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a href="@Url.Action("Index","PuntoEmision")">Regresar</a>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editar Punto Emisión</h5>
                </div>
                <div class="ibox-content">
				@using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.pemi_Id)
                        @Html.HiddenFor(model => model.pemi_UsuarioCrea)
                        @Html.HiddenFor(model => model.pemi_FechaCrea)
                        @Html.HiddenFor(model => model.pemi_UsuarioModifica)
                        @Html.HiddenFor(model => model.pemi_FechaModifica)
                        @Html.HiddenFor(model => model.tbUsuario.usu_Nombres)
                        @Html.HiddenFor(model => model.tbUsuario.usu_Apellidos)
                        @Html.HiddenFor(model => model.tbUsuario1.usu_Nombres)
                        @Html.HiddenFor(model => model.tbUsuario1.usu_Apellidos)


                        @if (ViewBag.Validacion == "1")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.pemi_NumeroCAI, new { @class = "control-label col-md-2" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.pemi_NumeroCAI, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                                    <small style="color:red">No se puede actualizar el número CAI porque ya existe uno o varios documentos fiscales con este número.</small>  
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.pemi_NumeroCAI, new { @class = "control-label col-md-2" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.pemi_NumeroCAI, new { htmlAttributes = new { @onkeypress = "return validarNúmeroCAI(event)", autocomplete = "off", @style = "text-transform:uppercase;" } })
                                    <p style="color:red">@Html.ValidationMessageFor(model => model.pemi_NumeroCAI)</p>
                                </div>
                            </div>
                        }

                        @if (ViewBag.Validacion == "1")
                        {
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary btn-sm" disabled/>
                                    @Html.ActionLink("Cancelar", "Index", new { id = Model.pemi_Id }, new { @class = "btn btn-white  btn-sm",@disabled="disabled" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary btn-sm" />
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white  btn-sm" })
                                </div>
                            </div>
                        }
                </div>
                }
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="tabs-container">
                                <ul class="nav nav-tabs">
                                    <li class="active"><a data-toggle="tab" href="#tab-1">Numeración</a></li>
                                    <li class=""><a data-toggle="tab" href="#tab-2">Sucursal</a></li>
                                </ul>
                                <div class="tab-content">
                                    <div id="tab-1" class="tab-pane active">
                                        <div class="panel-body">
                                            @Html.Partial("_IndexNumeracionEdit", Model.tbPuntoEmisionDetalle)
                                        </div>
                                    </div>
                                    <div id="tab-2" class="tab-pane">
                                        <div class="panel-body">
                                            @Html.Partial("_IndexSucursal", Model.tbSucursal)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
 </div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Auditoría</h5>
                    </div>
                    <div class="ibox-content">
                        <table class="table table-striped">
                            <tr>
                                <th>Acción</th>
                                <th>Usuario</th>
                                <th>Fecha</th>
                            </tr>
                            <tr>
                                <td>Creado</td>
                                <td>
                                    @Html.DisplayFor(model => model.tbUsuario.usu_Nombres)
                                    @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)
                                </td>
                                <td>@Html.DisplayFor(model => model.pemi_FechaCrea)</td>
                            </tr>
                            <tr>
                                <td>Modificado</td>
                                <td>
                                    @Html.DisplayFor(model => model.tbUsuario1.usu_Nombres)
                                    @Html.DisplayFor(model => model.tbUsuario1.usu_Apellidos)
                                </td>
                                <td>@Html.DisplayFor(model => model.pemi_FechaModifica)</td>
                            </tr>
                        </table>
                    
                </div>
                </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/app/DataTable.js"></script>
<script src="~/Scripts/app/PuntoEmision.js"></script>
<script src="~/Scripts/app/CreateNumeracionDetails.js"></script>
<script src="~/Scripts/app/EditNumeracion.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="~/Scripts/app/IndexNumeracion.js"></script>
<script src="~/Scripts/app/ComandoGuardar.js"></script>
<script>
    //Get Número CAI
    $('#btnModalGuardarNumeracion').click(function () {
        var GetNumeroCAI = $('#pemi_NumeroCAI').val();
        $("#tbPuntoEmision_pemi_NumeroCAI").val(GetNumeroCAI);
    });

    //Validación-Sólo número y guiones
    function validar(e) {
        tecla = (document.all) ? e.keyCode : e.which;
        tecla = String.fromCharCode(tecla)
        return /^[0-9\-]+$/.test(tecla);
    }

    //Número CAI
    function validarNúmeroCAI(e) {
        tecla = (document.all) ? e.keyCode : e.which;
        tecla = String.fromCharCode(tecla)
        return /^[a-z0-9A-Z\-]+$/.test(tecla);
    }
</script>
