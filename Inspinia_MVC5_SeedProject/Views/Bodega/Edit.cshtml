@model ERP_GMEDINA.Models.tbBodega
@using ERP_GMEDINA.Models
@{
    /**/

}
@{
    /**/


    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var ListadoMunicipio = new ERP_GMEDINA.Models.tbMunicipio();
    var ListadoDepartamento = new ERP_GMEDINA.Models.tbDepartamento();
}
<style>
    .validation-error {
        color: red;
        font-size: small;
    }

    .validation-summary-errors {
        color: red;
        font-size: small;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
    #bod_Nombre {
        text-transform: uppercase;
    }
</style>
@if (ViewBag.smserror != "" && ViewBag.smserror != null)
{
    <div class="col-md-12" id="mensaje">
        <div class="alert alert-warning alert-danger">

            <button type="button" class="close" data-dissmiss="alert" aria-hidden="true">@Html.ActionLink("X", "Edit", new { id = Model.bod_Id }, new { @class = "btn btn-white btn-xs" })</button>
            <h4><i class="icon fa fa-warning"></i>Alerta</h4>
            <h2>@ViewBag.smserror</h2>


        </div>
    </div>
}
@if (ViewBag.smserror_Estado != "" && ViewBag.smserror_Estado != null)
{
    <div class="col-md-12" id="mensaje">
        <div class="alert alert-warning alert-danger">

            <button type="button" class="close" data-dissmiss="alert" aria-hidden="true">@Html.ActionLink("X", "Edit", new { id = Model.bod_Id }, new { @class = "btn btn-white btn-xs" })</button>
            <h4><i class="icon fa fa-warning"></i>Alerta</h4>
            <h2>@ViewBag.smserror_Estado</h2>


        </div>
    </div>
}
<link href="~/Content/themes/base/all.css" rel="stylesheet" />
<link href="~/Content/css/Auditoria.css" rel="stylesheet" />
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Bodegas</h2>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar", "Index")
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            @*@using (Html.BeginForm("Edit", "Bodega", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {*@
            @using (Html.BeginForm())
            {
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Editar Bodega</h5>
                    </div>
                    <div class="ibox-content">
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.bod_Id)
                            @*Auditoria*@
                            @Html.HiddenFor(model => model.bod_UsuarioCrea)
                            @Html.HiddenFor(model => model.bod_FechaCrea)
                            @Html.HiddenFor(model => model.bod_UsuarioModifica)
                            @Html.HiddenFor(model => model.bod_FechaModifica)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Nombres)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Apellidos)
                            @Html.HiddenFor(model => model.tbUsuario1.usu_Nombres)
                            @Html.HiddenFor(model => model.tbUsuario1.usu_Apellidos)
                            @Html.HiddenFor(model => model.tbMunicipio.tbDepartamento.dep_Codigo)

                            @*Esto lo agregó Mágdaly Zúniga*@
                            @*Extras usuario crea*@
                            @Html.HiddenFor(model => model.tbUsuario.usu_NombreUsuario)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Password)
                            @Html.HiddenFor(model => model.tbUsuario.usu_Correo)
                            @Html.HiddenFor(model => model.tbUsuario.usu_EsActivo)
                            @Html.HiddenFor(model => model.tbUsuario.usu_EsAdministrador)

                            @*Extras usuario crea*@
                            @Html.HiddenFor(model => model.tbUsuario1.usu_NombreUsuario)
                            @Html.HiddenFor(model => model.tbUsuario1.usu_Password)
                            @Html.HiddenFor(model => model.tbUsuario1.usu_Correo)
                            @Html.HiddenFor(model => model.tbUsuario1.usu_EsActivo)
                            @Html.HiddenFor(model => model.tbUsuario1.usu_EsAdministrador)

                            <div class="form-group">
                                @*<label class="control-label col-md-2">Número<span style="color:red">*</span></label>*@
                                @*@Html.LabelFor(model => model.bod_Id,new { @class = "control-label col-md-2"})*@
                                @Html.LabelFor(model => model.bod_Id, new { @class = "control-label col-md-2 , required" })
                                @*<span style="position:absolute ; color:red"> *</span>*@
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.bod_Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.bod_Id)
                                </div>

                                @Html.LabelFor(model => model.bod_Direccion, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.bod_Direccion, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @onKeyPress = "return controlCaracteres(event)", @onkeyup = "this.value=NumText(this.value)" } })
                                    <p style="color:red" id="direccion_error">@Html.ValidationMessageFor(model => model.bod_Direccion) </p>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.bod_Nombre, new { @class = "control-label col-md-2 , required", @onKeyPress = "return soloLetras(event)" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.bod_Nombre, new { htmlAttributes = new { @class = "form-control", @onKeyPress = "return CaracteresNombre(event)", @onkeyup = "this.value=NumText(this.value)", @autocomplete = "off" } })
                                    <p style="color:red" id="nombre_error">@Html.ValidationMessageFor(model => model.bod_Nombre) </p>
                                </div>
                                @Html.LabelFor(model => model.bod_Correo, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.bod_Correo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @onKeyPress = "return Caracteres_Email(event)", @onkeyup = "this.value=CorreoElectronico(this.value)" } })
                                    @*<p style="color:red"> @Html.ValidationMessageFor(model => model.bod_Correo)</p>*@
                                    <div id="MessageForCorreo">
                                        <p style="color:red" id="correo_error">@Html.ValidationMessageFor(model => model.bod_Correo)</p>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.dep_Codigo, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.DropDownList("dep_Codigo", (IEnumerable<SelectListItem>)ViewBag.deparatamento_Edit, new { @class = "form-control" })
                                    <p id="Departamento" style="color:red">@Html.ValidationMessageFor(muni => ListadoDepartamento.dep_Codigo)</p>
                                </div>
                                @Html.LabelFor(model => model.mun_Codigo, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.DropDownList("mun_Codigo",@*null, "Seleccione Municipio",*@                              /**/
                                                                                                                                                                       /**/
                                                                                                                                                                       /**/
                                                                                                                                                                       (IEnumerable<SelectListItem>)ViewBag.municipio_Edit, new { @class = "form-control" })
                                    <p id="Municipio" style="color:red">@Html.ValidationMessageFor(model => model.mun_Codigo)</p>
                                </div>
                                @*<div class="form-group">
                                @Html.LabelFor(model => model.mun_Codigo, "mun_Codigo", new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("mun_Codigo", String.Empty)
                                    @Html.ValidationMessageFor(model => model.mun_Codigo)
                                </div>
                            </div>*@
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.bod_Telefono, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.bod_Telefono, new { htmlAttributes = new { onkeypress = "return validartel(event)" } })
                                    <p style="color:red" id="telefono_error">@Html.ValidationMessageFor(model => model.bod_Telefono)</p>
                                </div>
                                @Html.LabelFor(model => model.bod_ResponsableBodega, new { @class = "control-label col-md-2 , required" })
                                <div class="col-md-4">
                                    @Html.DropDownList("bod_ResponsableBodega", (IEnumerable<SelectListItem>)ViewBag.ResponsableBodegaList, new { @class = "form-control" })
                                    <p id="Departamento" style="color:red">@Html.ValidationMessageFor(muni => Model.bod_ResponsableBodega)</p>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.bod_EsActiva, "Estado", new { @class = "control-label col-md-2" })
                                <div class="col-md-5">
                                    @if (Model.bod_EsActiva == 1)
                                    {
                                        <p> Activa</p>
                                    }
                                    else
                                    {
                                        <p>Inactiva</p>
                                    }
                                </div>
                                <div class="col-md-4">

                                    <p style="color:red">  @Html.ValidationMessageFor(model => model.bod_EsActiva)</p>
                                </div>

                            </div>

                            @{if (Model.bod_EsActiva == 1)
                                {

                                    <div class="col-lg-12">
                                        @*<div class="ibox-title">*@
                                        <div class="title-action">
                                            <button type="button" class="btn btn-primary btn-sm" data-toggle="collapse" data-target="#Crear">Registrar Detalle</button>
                                        </div>
                                        @*</div>*@
                                        <div class="ibox-content collapse" id="Crear">
                                            @Html.Partial("_CreateNuevoBodegaDetalle_Modal", new tbBodegaDetalle())
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-lg-12">
                                        <div class="title-action">
                                            <button type="button" class="btn btn-primary" data-toggle="collapse" data-target="#Crear" disabled>Registrar Detalle</button>
                                        </div>
                                        <div class="ibox-content collapse" id="Crear">
                                            @Html.Partial("_CreateNuevoBodegaDetalle_Modal", new tbBodegaDetalle())
                                        </div>
                                    </div>
                                }
                            }



                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.Partial("_IndexBodegaDetalle", Model.tbBodegaDetalle, new ViewDataDictionary { { "bod_Id", Model.bod_Id } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group ">
                                <div class="col-md-offset-4 col-md-10">

                                    @{if (Model.bod_EsActiva == 1)
                                        {

                                            <input type="submit" value="Guardar" class="btn btn-primary" id="btnGuardar" />
                                            <input type="button" class="btn btn-danger" data-toggle="modal" data-target="#ModalEstado" value="Inactivar" />

                                        }
                                        else
                                        {
                                            <input type="submit" value="Guardar" class="btn btn-primary" id="btnGuardar" disabled />
                                            @Html.ActionLink("Activar", "Estadoactivar", new { id = Model.bod_Id }, new { @class = "btn btn-primary" })
                                        }
                                    }
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white" })

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Auditoría</h5>
                </div>
                <div class="ibox-content">
                    <table class="table table-striped  table-bordered">
                        <tr>
                            <th>Acción</th>
                            <th>Usuario</th>
                            <th>Fecha</th>
                        </tr>
                        <tr>
                            <td>Creado</td>
                            <td>
                                @Html.DisplayFor(model => model.tbUsuario.usu_Nombres)
                                @Html.DisplayFor(model => model.tbUsuario.usu_Apellidos)
                            </td>
                            <td>@Html.DisplayFor(model => model.bod_FechaCrea)</td>
                        </tr>
                        <tr>
                            <td>Modificado</td>
                            <td>
                                @Html.DisplayFor(model => model.tbUsuario1.usu_Nombres)
                                @Html.DisplayFor(model => model.tbUsuario1.usu_Apellidos)
                            </td>
                            <td>@Html.DisplayFor(model => model.bod_FechaModifica)</td>
                        </tr>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>
@*MODALES*@


<div class="modal fade" id="ModalEstado" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Inactivar Bodega</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ¿Está seguro que quiere Inactivar esta Bodega?
            </div>
            <div class="modal-footer">
                @Html.ActionLink("Sí", "EstadoInactivar", new { id = Model.bod_Id }, new { @class = "btn btn-danger" })
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/app/BusquedaGenerica.js"></script>
<script src="~/Scripts/app/BodegaDetalle.js"></script>
<script src="~/Scripts/app/EditBodegaDetalle.js"></script>
<script src="~/Scripts/app/ValidationErrorsBodega.js"></script>
@*<script src="~/Scripts/app/disableSubmits.js"></script>*@
@*<script language="javascript" type="text/javascript" src="disableSubmits.js"></script>*@
@*<script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
@*<script src="~/Scripts/app/Municipio.js"></script>*@
@*<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>*@
@*<script src="~/Scripts/app/Departamento.js"></script>*@

<script>
    $("#bod_Nombre").focus();
    $(document).ready(function () {
        var Mun = $('#mun_Codigo').val();

        console.log(Mun);
        if (Mun != '') {
            GetDepartamento();
            //GetMunicipios();
        }

    });

    function GetDepartamento() {
        var CodMunicipio = $('#mun_Codigo').val();
        $.ajax({
            url: "/Bodega/GetDepartamento",
            method: "POST",
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ CodMunicipio: CodMunicipio }),
        })
            .done(function (data) {
                if (data.length > 0) {
                    $('#dep_Codigo').empty();
                    //$('#dep_Codigo').append("<option value=''>Seleccione Municipio</option>");
                    $.each(data, function (key, val) {
                        $('#dep_Codigo').append("<option value=" + val.dep_Codigo + ">" + val.dep_Nombre + "</option>");
                    });
                    $('#dep_Codigo').trigger("chosen:updated");
                }
                else {
                    $('#dep_Codigo').empty();
                    $('#dep_Codigo').append("<option value=" + val.dep_Codigo + ">" + val.dep_Nombre + "</option>");
                }
            });

    }

    var contador = 0;
    $(document).keypress(function (e) {
        var IDInput = e.target.id;
        if (e.which == 13) {
            if (IDInput == 'prod_CodigoBarras') {
                $(function () {
                    $("#prod_CodigoBarras").val();
                    var Bod_Id = $('#bod_Id').val();
                    var Barras = $('#prod_CodigoBarras').val();

                    $.ajax({
                        type: 'POST',
                        url: '/Bodega/BuscarCodigoBarras',
                        data: JSON.stringify({ GET_Barras: Barras, GET_Bod: Bod_Id }),
                        contentType: 'application/json;',
                        dataType: 'json',


                    }).done(function (data) {
                        if (data.length > 0) {
                            $('#Error_Barras').text('');
                            $('#ErrorBarras_Create').after('<ul id="Error_Barras" class="validation-summary-errors text-danger">*Codigo De Barras Existente</ul>');
                            $('#prod_CodigoBarras').val('');

                        }
                        else {
                            $('#Error_Barras').text('');
                            var CBarras_Nuevo = $("#prod_CodigoBarras").val();
                            $.ajax({
                                url: "/Bodega/BuscarProductos",
                                method: "POST",
                                dataType: 'json',
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({
                                    GET_Barras_Nuevo: CBarras_Nuevo,
                                }),
                            }).done(function (data) {
                                if (data.length > 0) {
                                    //alert('aqui');
                                    //console.log(data);
                                    //$("#seleccionar").focus().click();
                                    $('#Error_Barras').text('');
                                    $.each(data, function (key, val) {

                                        data_producto = val.prod_Codigo;
                                        data_categoria = val.pcat_Nombre;
                                        data_subcate = val.pscat_Descripcion;
                                        data_unidad = val.uni_Descripcion;
                                        data_pDescripcion = val.prod_Descripcion;
                                        $('#prod_Codigo').val(data_producto);
                                        $('#pcat_Id').val(data_categoria);
                                        $('#pscat_Id').val(data_subcate);
                                        $('#uni_Id').val(data_unidad);
                                        $('#prod_Descripcion').val(data_pDescripcion);
                                    })
                                    $("#bodd_CantidadMinima").focus();
                                    $.ajax({
                                        url: "/Bodega/ProductosRepetidos",
                                        method: "POST",
                                        dataType: 'json',
                                        contentType: "application/json; charset=utf-8",
                                        data: JSON.stringify({ data_producto: data_producto }),
                                    })
                                        .done(function (datos) {
                                            //if (datos.length > 0) {
                                            if (datos == data_producto) {
                                                //alert('Es Igual.')
                                                $('#prod_Codigo').val('');
                                                $('#prod_CodigoBarras').val('');
                                                $('#prod_Descripcion').val('');
                                                $('#pcat_Id').val('');
                                                $('#pscat_Id').val('');
                                                $('#uni_Id').val('');
                                                $('#Error_Barras').text('');
                                                $('#ErrorBarras_Create').after('<ul id="Error_Barras" class="validation-summary-errors text-danger">*El Codigo ya ha sido ingresado</ul>');
                                                $("#prod_CodigoBarras").focus();
                                            }
                                            else {
                                                //alert('NO ES IGUAL')

                                            }


                                        })
                                }
                                else {
                                    $('#Error_Barras').text('');
                                    $('#ErrorBarras_Create').after('<ul id="Error_Barras" class="validation-summary-errors text-danger">*Producto no existe</ul>');
                                }


                            });

                        }
                    });

                    return false;
                    //}
                    //});
                });

                ////
                return false;
            }
            else
                return false;
        }
    });

    $('#AgregarBodegaDetalle').keypress(function () {
        var Producto = $('#prod_Codigo').val();
        var Cminima = $('#bodd_CantidadMinima').val();
        var Preorden = $('#bodd_PuntoReorden').val();
        var Cmaxima = $('#bodd_CantidadMaxima').val();
        var Costo = $('#bodd_Costo').val();
        var Cpromedio = $('#bodd_CostoPromedio').val();
        var Cbarras = $('#prod_CodigoBarras').val();

        if (Producto == '') {
            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#ErrorProducto_Create').after('<ul id="Error_Producto" class="validation-summary-errors text-danger">*Codigo Producto Requerido</ul>');

        }
        else if (Cbarras == '') {

            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#Error_Barras').text('');
            $('#ErrorBarras_Create').after('<ul id="Error_Barras" class="validation-summary-errors text-danger">*Codigo De Barras Requerido</ul>');
        }
        else if (Cminima == '') {

            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#ErrorCantidadMinima_Create').after('<ul id="Error_CantidadMinima" class="validation-summary-errors text-danger">*Cantidad Miníma Requerido</ul>');
        }

        else if (Preorden == '') {
            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#ErrorPuntoReorden_Create').after('<ul id="Error_PuntoReorden" class="validation-summary-errors text-danger">*Campo Punto Reorden Requerido</ul>');
        }


        else if (Cmaxima == '') {
            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#ErrorCantidadMaxima_Create').after('<ul id="Error_CantidadMaxima" class="validation-summary-errors text-danger">*Cantidad Máxima Requerido</ul>');

        }

        else if (Costo == '') {
            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#ErrorCosto_Create').after('<ul id="Error_Costo" class="validation-summary-errors text-danger">*Campo Costo Requerido</ul>');

        }
        else if (Cpromedio == '') {

            $('#MessageError').text('');
            $('#Error_Producto').text('');
            $('#Error_PuntoReorden').text('');
            $('#Error_CantidadMinima').text('');
            $('#Error_CantidadMaxima').text('');
            $('#Error_Costo').text('');
            $('#Error_CostoPromedioo').text('');
            $('#ErrorCostoPromedio_Create').after('<ul id="Error_CostoPromedioo" class="validation-summary-errors text-danger">*Campo Costo Promedio Requerido</ul>');
        }

        else {
            //Aqui importa el orden
            console.log(Cbarras, 'prueba');
            contador = contador + 1;
            copiar = "<tr data-id=" + contador + ">";
            copiar += "<td id = 'Cbarras'>" + Cbarras + "</td>";
            copiar += "<td id = 'Producto'>" + $('#prod_Codigo').val() + "</td>";
            copiar += "<td id = 'Descripcion_P'>" + $('#prod_Descripcion').val() + "</td>";
            copiar += "<td id = 'Costo'>" + $('#bodd_Costo').val() + "</td>";
            copiar += "<td id = 'Cpromedio'>" + $('#bodd_CostoPromedio').val() + "</td>";
            copiar += "<td id = ''></td>";
            copiar += "<td id = 'Preorden' hidden >" + $('#bodd_PuntoReorden').val() + "</td>";// aqui va el campo y luego se llena con el id del mismo, que ya ha capturado el valor
            copiar += "<td id = 'Cminima' hidden>" + $('#bodd_CantidadMinima').val() + "</td>";
            copiar += "<td id = 'Cmaxima' hidden >" + $('#bodd_CantidadMaxima').val() + "</td>";
            copiar += "<td>" + '<button id="removeBodegaDetalle" class="btn btn-danger btn-xs eliminar" type="button">Quitar</button>' + "</td>";
            copiar += "</tr>";
            $('#tbBodega').append(copiar);

            var tbBodegaDetalle = Getbodegadetalle();
            $.ajax({
                url: "/Bodega/SaveBodegaDetalle",
                method: "POST",
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ BODEGADETALLE: tbBodegaDetalle }),
            })
                .done(function (data) {
                    $('#prod_Codigo').val('');
                    $('#prod_CodigoBarras').val('');
                    $('#prod_Descripcion').val('');
                    $('#pcat_Id').val('');
                    $('#pscat_Id').val('');
                    $('#uni_Id').val('');
                    $('#bodd_PuntoReorden').val('');
                    $('#bodd_CantidadMinima').val('');
                    $('#bodd_CantidadMaxima').val('');
                    $('#bodd_Costo').val('');
                    $('#bodd_CostoPromedio').val('');

                    $('#MessageError').text('');
                    $('#Error_Producto').text('');
                    $('#Error_PuntoReorden').text('');
                    $('#Error_CantidadMinima').text('');
                    $('#Error_CantidadMaxima').text('');
                    $('#Error_Costo').text('');
                    $('#Error_CostoPromedioo').text('');

                });
        }
    });
    function Getbodegadetalle() {
        var BODEGADETALLE = {
            prod_Codigo: $('#prod_Codigo').val(),
            bodd_puntoReorden: $('#bodd_PuntoReorden').val(),
            bodd_cantidadMinima: $('#bodd_CantidadMinima').val(),
            bodd_cantidadMaxima: $('#bodd_CantidadMaxima').val(),
            bodd_costo: $('#bodd_Costo').val(),
            bodd_costoPromedio: $('#bodd_CostoPromedio').val(),
            bodd_UsuarioCrea: contador,
            bodd_Id: contador,
        };
        return BODEGADETALLE;
    }


</script>