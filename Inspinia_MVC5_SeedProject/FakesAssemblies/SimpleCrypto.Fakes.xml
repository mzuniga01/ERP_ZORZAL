<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleCrypto.Fakes</name>
    </assembly>
    <members>
        <member name="T:SimpleCrypto.Fakes.ShimPBKDF2">
            <summary>Shim type of SimpleCrypto.PBKDF2</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimPBKDF2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimPBKDF2.#ctor(SimpleCrypto.PBKDF2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.CompareStringString">
            <summary>Sets the shim of PBKDF2.Compare(String passwordHash1, String passwordHash2)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.Compute">
            <summary>Sets the shim of PBKDF2.Compute()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.ComputeString">
            <summary>Sets the shim of PBKDF2.Compute(String textToHash)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.ComputeStringInt32Int32">
            <summary>Sets the shim of PBKDF2.Compute(String textToHash, Int32 saltSize, Int32 hashIterations)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.ComputeStringString">
            <summary>Sets the shim of PBKDF2.Compute(String textToHash, String salt)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.GenerateSalt">
            <summary>Sets the shim of PBKDF2.GenerateSalt()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.GenerateSaltInt32Int32">
            <summary>Sets the shim of PBKDF2.GenerateSalt(Int32 hashIterations, Int32 saltSize)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.GetElapsedTimeForIterationInt32">
            <summary>Sets the shim of PBKDF2.GetElapsedTimeForIteration(Int32 iteration)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.HashIterationsGet">
            <summary>Sets the shim of PBKDF2.get_HashIterations()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.HashIterationsSetInt32">
            <summary>Sets the shim of PBKDF2.set_HashIterations(Int32 value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.HashedTextGet">
            <summary>Sets the shim of PBKDF2.get_HashedText()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.HashedTextSetString">
            <summary>Sets the shim of PBKDF2.set_HashedText(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.PlainTextGet">
            <summary>Sets the shim of PBKDF2.get_PlainText()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.PlainTextSetString">
            <summary>Sets the shim of PBKDF2.set_PlainText(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.SaltGet">
            <summary>Sets the shim of PBKDF2.get_Salt()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.SaltSetString">
            <summary>Sets the shim of PBKDF2.set_Salt(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.SaltSizeGet">
            <summary>Sets the shim of PBKDF2.get_SaltSize()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.SaltSizeSetInt32">
            <summary>Sets the shim of PBKDF2.set_SaltSize(Int32 value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.calculateHashInt32">
            <summary>Sets the shim of PBKDF2.calculateHash(Int32 iteration)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.AllInstances.expandSalt">
            <summary>Sets the shim of PBKDF2.expandSalt()</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimPBKDF2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimPBKDF2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimPBKDF2.Bind(SimpleCrypto.ICryptoService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.CompareStringString">
            <summary>Sets the shim of PBKDF2.Compare(String passwordHash1, String passwordHash2)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.Compute">
            <summary>Sets the shim of PBKDF2.Compute()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.ComputeString">
            <summary>Sets the shim of PBKDF2.Compute(String textToHash)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.ComputeStringInt32Int32">
            <summary>Sets the shim of PBKDF2.Compute(String textToHash, Int32 saltSize, Int32 hashIterations)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.ComputeStringString">
            <summary>Sets the shim of PBKDF2.Compute(String textToHash, String salt)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.Constructor">
            <summary>Sets the shim of PBKDF2.PBKDF2()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.GenerateSalt">
            <summary>Sets the shim of PBKDF2.GenerateSalt()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.GenerateSaltInt32Int32">
            <summary>Sets the shim of PBKDF2.GenerateSalt(Int32 hashIterations, Int32 saltSize)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.GetElapsedTimeForIterationInt32">
            <summary>Sets the shim of PBKDF2.GetElapsedTimeForIteration(Int32 iteration)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.HashIterationsGet">
            <summary>Sets the shim of PBKDF2.get_HashIterations()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.HashIterationsSetInt32">
            <summary>Sets the shim of PBKDF2.set_HashIterations(Int32 value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.HashedTextGet">
            <summary>Sets the shim of PBKDF2.get_HashedText()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.HashedTextSetString">
            <summary>Sets the shim of PBKDF2.set_HashedText(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.PlainTextGet">
            <summary>Sets the shim of PBKDF2.get_PlainText()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.PlainTextSetString">
            <summary>Sets the shim of PBKDF2.set_PlainText(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.SaltGet">
            <summary>Sets the shim of PBKDF2.get_Salt()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.SaltSetString">
            <summary>Sets the shim of PBKDF2.set_Salt(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.SaltSizeGet">
            <summary>Sets the shim of PBKDF2.get_SaltSize()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.SaltSizeSetInt32">
            <summary>Sets the shim of PBKDF2.set_SaltSize(Int32 value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.calculateHashInt32">
            <summary>Sets the shim of PBKDF2.calculateHash(Int32 iteration)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimPBKDF2.expandSalt">
            <summary>Sets the shim of PBKDF2.expandSalt()</summary>
        </member>
        <member name="T:SimpleCrypto.Fakes.ShimRandomPassword">
            <summary>Shim type of SimpleCrypto.RandomPassword</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimRandomPassword.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimRandomPassword.#ctor(SimpleCrypto.RandomPassword)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SimpleCrypto.Fakes.ShimRandomPassword.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimRandomPassword.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.ShimRandomPassword.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword.Constructor">
            <summary>Sets the shim of RandomPassword.RandomPassword()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword.GenerateInt32Int32PasswordGroupArray">
            <summary>Sets the shim of RandomPassword.Generate(Int32 minLength, Int32 maxLength, PasswordGroup[] groups)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword.GenerateInt32PasswordGroupArray">
            <summary>Sets the shim of RandomPassword.Generate(Int32 length, PasswordGroup[] groups)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword.GeneratePasswordGroupArray">
            <summary>Sets the shim of RandomPassword.Generate(PasswordGroup[] groups)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword.StaticConstructor">
            <summary>Sets the shim of RandomPassword.RandomPassword()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword._Generateb__2KeyValuePairOfPasswordGroupString">
            <summary>Sets the shim of RandomPassword.&lt;Generate&gt;b__2(KeyValuePair`2&lt;PasswordGroup,String&gt; p)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.ShimRandomPassword._Generateb__3KeyValuePairOfPasswordGroupString">
            <summary>Sets the shim of RandomPassword.&lt;Generate&gt;b__3(KeyValuePair`2&lt;PasswordGroup,String&gt; p)</summary>
        </member>
        <member name="T:SimpleCrypto.Fakes.StubICryptoService">
            <summary>Stub type of SimpleCrypto.ICryptoService</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.#ctor">
            <summary>Initializes a new instance of type StubICryptoService</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.AttachBackingFieldToHashIterations">
            <summary>Attaches delegates to emulate StubICryptoService.HashIterations as a property with a backing field.</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.AttachBackingFieldToPlainText">
            <summary>Attaches delegates to emulate StubICryptoService.PlainText as a property with a backing field.</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.AttachBackingFieldToSalt">
            <summary>Attaches delegates to emulate StubICryptoService.Salt as a property with a backing field.</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.AttachBackingFieldToSaltSize">
            <summary>Attaches delegates to emulate StubICryptoService.SaltSize as a property with a backing field.</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.CompareStringString">
            <summary>Sets the stub of ICryptoService.Compare(String passwordHash1, String passwordHash2)</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.Compute">
            <summary>Sets the stub of ICryptoService.Compute()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.ComputeString">
            <summary>Sets the stub of ICryptoService.Compute(String textToHash)</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.ComputeStringInt32Int32">
            <summary>Sets the stub of ICryptoService.Compute(String textToHash, Int32 saltSize, Int32 hashIterations)</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.ComputeStringString">
            <summary>Sets the stub of ICryptoService.Compute(String textToHash, String salt)</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.GenerateSalt">
            <summary>Sets the stub of ICryptoService.GenerateSalt()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.GenerateSaltInt32Int32">
            <summary>Sets the stub of ICryptoService.GenerateSalt(Int32 hashIterations, Int32 saltSize)</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.GetElapsedTimeForIterationInt32">
            <summary>Sets the stub of ICryptoService.GetElapsedTimeForIteration(Int32 iteration)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#HashIterations">
            <summary>Sets the stub of ICryptoService.get_HashIterations()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.HashIterationsGet">
            <summary>Sets the stub of ICryptoService.get_HashIterations()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.HashIterationsSetInt32">
            <summary>Sets the stub of ICryptoService.set_HashIterations(Int32 value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#HashedText">
            <summary>Sets the stub of ICryptoService.get_HashedText()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.HashedTextGet">
            <summary>Sets the stub of ICryptoService.get_HashedText()</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#PlainText">
            <summary>Sets the stub of ICryptoService.get_PlainText()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.PlainTextGet">
            <summary>Sets the stub of ICryptoService.get_PlainText()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.PlainTextSetString">
            <summary>Sets the stub of ICryptoService.set_PlainText(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#Salt">
            <summary>Sets the stub of ICryptoService.get_Salt()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.SaltGet">
            <summary>Sets the stub of ICryptoService.get_Salt()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.SaltSetString">
            <summary>Sets the stub of ICryptoService.set_Salt(String value)</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#SaltSize">
            <summary>Sets the stub of ICryptoService.get_SaltSize()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.SaltSizeGet">
            <summary>Sets the stub of ICryptoService.get_SaltSize()</summary>
        </member>
        <member name="F:SimpleCrypto.Fakes.StubICryptoService.SaltSizeSetInt32">
            <summary>Sets the stub of ICryptoService.set_SaltSize(Int32 value)</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#Compare(System.String,System.String)">
            <summary>Sets the stub of ICryptoService.Compare(String passwordHash1, String passwordHash2)</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#Compute">
            <summary>Sets the stub of ICryptoService.Compute()</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#Compute(System.String)">
            <summary>Sets the stub of ICryptoService.Compute(String textToHash)</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#Compute(System.String,System.String)">
            <summary>Sets the stub of ICryptoService.Compute(String textToHash, String salt)</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#Compute(System.String,System.Int32,System.Int32)">
            <summary>Sets the stub of ICryptoService.Compute(String textToHash, Int32 saltSize, Int32 hashIterations)</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#GenerateSalt">
            <summary>Sets the stub of ICryptoService.GenerateSalt()</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#GenerateSalt(System.Int32,System.Int32)">
            <summary>Sets the stub of ICryptoService.GenerateSalt(Int32 hashIterations, Int32 saltSize)</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubICryptoService.SimpleCrypto#ICryptoService#GetElapsedTimeForIteration(System.Int32)">
            <summary>Sets the stub of ICryptoService.GetElapsedTimeForIteration(Int32 iteration)</summary>
        </member>
        <member name="T:SimpleCrypto.Fakes.StubPBKDF2">
            <summary>Stub type of SimpleCrypto.PBKDF2</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubPBKDF2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubPBKDF2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubPBKDF2.InitializeStub">
            <summary>Initializes a new instance of type StubPBKDF2</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubPBKDF2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubPBKDF2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SimpleCrypto.Fakes.StubRandomPassword">
            <summary>Stub type of SimpleCrypto.RandomPassword</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubRandomPassword.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubRandomPassword.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SimpleCrypto.Fakes.StubRandomPassword.InitializeStub">
            <summary>Initializes a new instance of type StubRandomPassword</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubRandomPassword.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SimpleCrypto.Fakes.StubRandomPassword.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
